//
// This file generated by rdl 1.4.6
//

package com.yahoo.rdl;
import java.util.Map;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

//
// BytesTypeDef - Bytes allow the restriction by fixed size, or min/max size.
//
@JsonSerialize(include = JsonSerialize.Inclusion.NON_DEFAULT)
public class BytesTypeDef {
    public String type;
    public String name;
    @RdlOptional
    public String comment;
    @RdlOptional
    public Map<String, String> annotations;
    @RdlOptional
    public Integer size;
    @RdlOptional
    public Integer minSize;
    @RdlOptional
    public Integer maxSize;

    public BytesTypeDef type(String type) {
        this.type = type;
        return this;
    }
    public BytesTypeDef name(String name) {
        this.name = name;
        return this;
    }
    public BytesTypeDef comment(String comment) {
        this.comment = comment;
        return this;
    }
    public BytesTypeDef annotations(Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    public BytesTypeDef size(Integer size) {
        this.size = size;
        return this;
    }
    public BytesTypeDef minSize(Integer minSize) {
        this.minSize = minSize;
        return this;
    }
    public BytesTypeDef maxSize(Integer maxSize) {
        this.maxSize = maxSize;
        return this;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != BytesTypeDef.class) {
                return false;
            }
            BytesTypeDef a = (BytesTypeDef) another;
            if (type == null ? a.type != null : !type.equals(a.type)) {
                return false;
            }
            if (name == null ? a.name != null : !name.equals(a.name)) {
                return false;
            }
            if (comment == null ? a.comment != null : !comment.equals(a.comment)) {
                return false;
            }
            if (annotations == null ? a.annotations != null : !annotations.equals(a.annotations)) {
                return false;
            }
            if (size == null ? a.size != null : !size.equals(a.size)) {
                return false;
            }
            if (minSize == null ? a.minSize != null : !minSize.equals(a.minSize)) {
                return false;
            }
            if (maxSize == null ? a.maxSize != null : !maxSize.equals(a.maxSize)) {
                return false;
            }
        }
        return true;
    }
}
